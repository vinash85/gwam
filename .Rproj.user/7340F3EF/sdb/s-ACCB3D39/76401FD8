{
    "contents" : "#################################\n#Differential gene expression by limma\n#################################\n\n# 5000 differetional genes\nlibrary(data.table)\nlibrary(avinash)\nload(\"~/shortcuts/Data/MikeData/MAGnet_combat_eset.Rdata\")\nrequire(Biobase)\nrequire(BiocGenerics)\nrequire(parallel)\nexpressions <- exprs(eset.combat)\nexpression.sub <- as.data.table(t(expressions))\ngenes.col <- paste0(\"X\", colnames(expression.sub))\nsetnames(expression.sub,seq(ncol(expression.sub)), genes.col)\nexpression.sub$sample_name <- colnames(expressions)\nsetkey(expression.sub, sample_name)\nphysiological.tab <- fread(\"~/project/gtps/gtps/doc/magnet_redcap.txt\")\nsetkey(physiological.tab, sample_name)\nexpression.annot <- merge(x=expression.sub, y=physiological.tab, by=\"sample_name\")\nexpression.annot[,disease.p:=ifelse(etiology==\"donor\",1,2)]\nexpression.annot[,history_of_afib_aflutter.p:=sapply(history_of_afib_aflutter, function(xx) switch(xx, \"Yes\"=1, \"No\"=0, NA))]\nexpression.annot[,history_of_diabetes.p:=sapply(history_of_diabetes, function(xx) switch(xx, \"Yes\"=1, \"No\"=0, NA))]\nexpression.annot[,history_of_hypertension.p:=sapply(history_of_hypertension, function(xx) switch(xx, \"Yes\"=1, \"No\"=0, NA))]\n\nlibrary(limma)\nexp.mat  <- as.matrix(expressions)\ndesign <- cbind(grp1=1, disease=expression.annot$disease.p) \nfit  <-  lmFit(exp.mat, design)\n# Fold-change thresholding\nfit2 <- treat(fit,lfc=0.1)\ntopTreat(fit2,coef=2)\nfit2 <- eBayes(fit2) \ntopGene <- topTreat(fit2,coef=2,10000)\ntopGene <- topGene[topGene$adj.P.Val < 1e-5,] # 6670 genes with adj p.value  < 1e-5\n\n\n\n##################################################################\n#find in donors (and heart failures) SNP explaining variance by lasso\n##################################################################\nexpression.diff = t(expressions[rownames(topGene),])\nexp.diff.donor = expression.diff[expression.annot$disease.p==1,]\nload(\"/fs/sh-project/Projects/Cardio/Data/MikeData/MAGnet_eQTL_impute/genotype1.RData\")\ngenotype.sample = rownames(genotype)\ngenotype = genotype[colnames(expressions),]\ngenotype.donor = genotyp\ngenotype.exp = genotype[,1:100]\ngenotype.exp = genotype.exp[colnames(expressions),]\naa = lasso.EQTL(x=genotype.exp, y=t(expressions[1:10,]))\n# alternativly only genotyped SNPs  \n\nload(\"/fs/sh-project/Projects/Cardio/Data/MikeData/magnet_PedTraits.RData\")\nsnpcol = grep(colnames(pedtrait), pattern=\"SNP\")\nsetkey(pedtrait, sample_name)\ngenotype=pedtrait[colnames(expressions)]\ngenotype=as.matrix(genotype[, snpcol, with=F])\nsource(\"/cbcbhomes/vinash85/project/gwam/R/lasso.eqtl.R\")\ngenotype.nona = sapply(t(genotype[,1:10]), function(tt) {\n\tmm = mean(tt, na.rm=T)\n\ttt[is.na(tt)] = mm\n\ttt\n\t})\nimpute = function(tt) {\n\tmm = mean(tt, na.rm=T)\n\ttt[is.na(tt)] = mm\n\ttt\n\t}\n\ngenotype.nona = apply(genotype[,1:10],2,impute )\ngenotype.nona = matrix(genotype.nona, nrow=313, byrow=F)\naa = lasso.EQTL(x=genotype.nona, y=t(expressions[1:9,]))\n\n##################################################################\n# convert expression to log. \n#Use peer to remove SNPs along with major \"factors\" explaing the expression variance (separtely in donors and HF)\n##################################################################\n\n#################################\n# combine the effect for donors and HF and find residual\n# Run eQTeL on 2000 genes. With estiamted alpha run 3000 genes separately.\n#################################",
    "created" : 1421775782464.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2226448798",
    "id" : "76401FD8",
    "lastKnownWriteTime" : 1422023151,
    "path" : "~/project/gwam/gwam/R/run.R",
    "project_path" : "R/run.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}